<?xml version="1.0" encoding="utf-8"?>
<GenerateModel xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="generateMetaModel_Module.xsd">
  <PythonExport
      Father="PyObjectBase"
      Name="MakeOffsetPy"
      PythonName="Part.BRepOffsetAPI.MakeOffset"
      Twin="BRepOffsetAPI_MakeOffsetFix"
      TwinPointer="BRepOffsetAPI_MakeOffsetFix"
      Include="Mod/Part/App/BRepOffsetAPI_MakeOffsetFix.h"
      Namespace="Part"
      FatherInclude="Base/PyObjectBase.h"
      FatherNamespace="Base"
      Constructor="true"
      Delete="true">
      <Documentation>
          <Author Licence="LGPL" Name="Werner Mayer" EMail="wmayer[at]users.sourceforge.net" />
          <UserDocu>Describes algorithms for offsetting wires</UserDocu>
      </Documentation>
      <Methode Name="init" Keyword="true">
          <Documentation>
              <UserDocu>
  Initializes this algorithm to construct parallels to the spine.
  Join defines the type of parallel generated by the
  salient vertices of the spine.
  The default type is GeomAbs_Arc where the vertices generate
  sections of a circle.

  If join type is GeomAbs_Intersection, the edges that
  intersect in a salient vertex generate the edges
  prolonged until intersection.
              </UserDocu>
          </Documentation>
      </Methode>
      <Methode Name="addWire">
          <Documentation>
              <UserDocu>
                  addWire(Spine:Wire)
                  Adds a wire.
              </UserDocu>
          </Documentation>
      </Methode>
      <Methode Name="build">
          <Documentation>
              <UserDocu>Builds the resulting shape.</UserDocu>
          </Documentation>
      </Methode>
      <Methode Name="perform" Keyword="true">
          <Documentation>
              <UserDocu>
                  perform(Offset:float, Alt:float = 0.0)

                  Computes a parallel to the spine at distance Offset and
                  at an altitude Alt from the plane of the spine in relation
                  to the normal to the spine.
              </UserDocu>
          </Documentation>
      </Methode>
      <Methode Name="isDone">
          <Documentation>
              <UserDocu>Tests whether computation of the offset has been completed.</UserDocu>
          </Documentation>
      </Methode>
      <Methode Name="shape">
          <Documentation>
              <UserDocu>
                  shape()
                  Returns the resulting shape.
              </UserDocu>
          </Documentation>
      </Methode>
  </PythonExport>
</GenerateModel>
